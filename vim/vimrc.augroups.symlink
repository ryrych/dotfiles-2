" Remove trailing spaces
augroup TrailingSpaces
  au!
  au BufWritePre * if &ft != "markdown" | let b:cpos = [line("."), col(".")] | %s/\s\+$//e | call cursor(b:cpos) | endif
augroup END

augroup Text
  au!
  au FileType markdown setlocal textwidth=80 formatoptions+=1
  au FileType markdown setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab
  au FileType markdown setlocal wrap linebreak
  au FileType markdown,text,gitcommit setlocal complete+=k infercase
  au FileType markdown,text,gitcommit setlocal isk-=-
augroup END

augroup Pencil
  au!
  au FileType markdown,mkd call pencil#init({'wrap': 'soft'})
  au FileType markdown,mkd call textobj#quote#init()
  au FileType markdown,mkd call lexical#init()

  au FileType markdown,mkd map <silent> <leader>qc <Plug>ReplaceWithCurly
  au FileType markdown,mkd map <silent> <leader>qs <Plug>ReplaceWithStraight
augroup END

" Lispy identifiers support
" https://github.com/szw/vim-kompleter#lispy-identifiers
augroup LispyIdentifiers
  au!
  au FileType lisp,clojure,html,xml,xhtml,haml,eruby,css,scss,sass,javascript,coffee setlocal isk+=-
augroup END

augroup Ruby
  au!
  au FileType ruby,eruby,haml setlocal omnifunc=rubycomplete#Complete
  au FileType ruby,eruby,haml let g:rubycomplete_buffer_loading = 1
  au FileType ruby,eruby,haml let g:rubycomplete_rails = 1
  au FileType ruby,eruby,haml let g:rubycomplete_classes_in_global = 1
  au FileType ruby,eruby,haml setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
  au FileType ruby,eruby,haml Rvm
  au FileType ruby setlocal isk-=-
augroup END

augroup Javascript
  au!
  au FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS tabstop=4 softtabstop=4 shiftwidth=4 expandtab
augroup END

augroup CoffeeScript
  au!
  au FileType coffee setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
augroup END

augroup Html
  au!
  au FileType html setlocal omnifunc=htmlcomplete#CompleteTags
augroup END

augroup Css
  au!
  au FileType css,scss setlocal omnifunc=csscomplete#CompleteCSS
  au FileType scss setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
augroup END

augroup Xml
  au!
  au FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
augroup END

augroup Yaml
  au!
  au FileType yaml setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
augroup END

autocmd! BufWritePost * Neomake

autocmd FileType typescript setlocal completeopt+=menu,preview

" ruby augroup is not run
au BufNewFile,BufRead *.html.haml set filetype=haml
